
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-agent-login]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLAGENTSTATUS, ARG4: Origen del login
include => sub-oml-agent-login-custom

exten => s,1,Verbose(2, Agent login ${ARG1})
; Si es un F5, compruebo primero si es que esta en pausa, para hacer un UNPAUSEALL
same => n,GotoIf($["${ARG3}" == "READY"]?goNext)
same => n,GotoIf($["${ARG3}" == "OFFLINE"]?goNext)
same => n,Verbose(2,Agent Unpaused)
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},UNPAUSEALL)
; Si es un F5, compruebo primero si es que esta en logueado a alguna campaÃ±a, para hacer un REMOVEMEMBER
same => n(goNext),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,Set(RESULTREMOVE=NULL)
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)
; si ya esta logueado (es un f5) entonces primero desloguea
same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,RemoveQueueMember(${QUEUENAME},SIP/${ARG2})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,Verbose(2, Result of RemoveQueueMember: ${RQMSTATUS})
same => n,ExecIf($["${RQMSTATUS}" == "REMOVED"]?Gosub(sub-oml-remove-add,s,1))
same => n,EndWhile()
same => n,ODBCFinish()
same => n,GotoIf($["${OMLFLAGREMOVE}" != "true"]?noQueuelog)
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},REMOVEMEMBER)
; comienza login
same => n(noQueuelog),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)

same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,AddQueueMember(${QUEUENAME},SIP/${MemberChannel},${PENALTY},,${AGENTNAME})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()
same => n,ODBCFinish()
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},ADDMEMBER)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Playback(silence/1&${OMLLANG}/agent-loginok)
same => n,Hangup()

exten => no_rows,1,Verbose(1,No rows returned)
same => n,Playback(silence/1&${OMLLANG}/agent-loginok)
same => n,Hangup()


[sub-oml-agent-logout]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLAGENTSTATUS, ARG4: Origen del logout
include => sub-oml-agent-logout-custom

exten => s,1,Verbose(2, Agent login ${ARG1})
same => n,Verbose(Pause status: ${ARG3})
same => n,GotoIf($[${ARG3} == "READY"]?nonPause)
same => n,Verbose(2,Agent Unpaused before logout)
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},UNPAUSEALL)

same => n(nonPause),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)
same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,RemoveQueueMember(${QUEUENAME},SIP/${ARG2})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()
same => n,ODBCFinish()
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},REMOVEMEMBER)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=OFFLINE:${EPOCH})
same => n,Playback(silence/1&${OMLLANG}/agent-loggedoff)
same => n,Hangup()

exten => no_rows,1,Verbose(1,No rows returned)
same => n,Playback(silence/1&${OMLLANG}/agent-loggedoff)
same => n,Hangup()


[sub-oml-agent-pause]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLPAUSEID
include => sub-oml-agent-pause-custom

exten => s,1,Verbose(2, Agent pause ${ARG1})

same => n,Set(OMLPAUSENAME=${DB(OML/PAUSE/${ARG3}/NAME)})
same => n,ExecIf($["${ARG3}" == "0"]?Set(OMLPAUSENAME=ACW))
same => n,ExecIf($["${ARG3}" == "00"]?Set(OMLPAUSENAME=Supervision))
same => n,PauseQueueMember(,SIP/${ARG2},,${ARG3})
same => n,GotoIf($[${PQMSTATUS} = PAUSED]?agent_paused:agent_not_found)

same => n(agent_paused),Verbose(2,Agent paused successfully)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=PAUSE-${OMLPAUSENAME}:${EPOCH})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/IDPAUSE)=${ARG1})
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},PAUSEALL,${ARG3})
same => n,Playback(silence/1&${OMLLANG}/de-activated)
same => n,Hangup()

same => n(agent_not_found),Verbose(2,Agent was not found)
same => n,Playback(silence/1&${OMLLANG}/oml/agente-no-campaign)
same => n,Hangup()

[sub-oml-agent-unpause]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP
include => sub-oml-agent-unpause-custom

exten => s,1,Verbose(2, Agent unpause ${ARG1})

same => n,UnPauseQueueMember(,SIP/${ARG2})
same => n,GotoIf($[${UPQMSTATUS} = UNPAUSED]?agent_unpaused:agent_not_found)

same => n(agent_unpaused),Verbose(2, Agent paused successfully)
same => n,Set(DB(OML/AGENT/${ARG1}/STATUS)=READY:${EPOCH})
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},UNPAUSEALL,${DB(OML/AGENT/${ARG1}/IDPAUSE)})
same => n,Playback(silence/1&${OMLLANG}/activated)
same => n,Hangup()

same => n(agent_not_found),Verbose(2, Agent was not found)
same => n,Playback(silence/1&${OMLLANG}/oml/agente-no-campaign)


[sub-oml-remove-add]
exten => s,1,Verbose(2, session flag)
same => n,Set(OMLFLAGREMOVE=true)
same => n,Return()
