---

- name: Clonado de repositorio de RTPengine
  git:
          repo: "{{ rtpengine_repo }}"
          dest: /usr/src/rtpengine

- name: Build de rtpengine con dpkg
  shell: >
          chdir=/usr/src/rtpengine
          dpkg-buildpackage

- action: shell ls /usr/src/
  register: dirsrc

- name: Instalacion de los .deb de rtpengine
  apt:
          deb=/usr/src/{{ item }}
  with_items:
          - "{{ dirsrc.stdout_lines[7] }}"
          - "{{ dirsrc.stdout_lines[9] }}"
          - "{{ dirsrc.stdout_lines[8] }}"
          - "{{ dirsrc.stdout_lines[13] }}"
          - "{{ dirsrc.stdout_lines[10] }}"
          - "{{ dirsrc.stdout_lines[12] }}"
          - "{{ dirsrc.stdout_lines[3] }}"

- name: Clonado de repositorio de Kamailio
  shell: >
          git clone --depth 1 --no-single-branch {{ item }} kamailio
          chdir=/usr/src/
  with_items:
          - "{{ kamailio_repo }}"

- name: Checkout del repositorio 
  command: "{{ item }} chdir=/usr/src/kamailio/"
  with_items:
          - git checkout -b 4.4 origin/4.4
          - make PREFIX=/opt/kamailio cfg

- name: Se añade los modulos al modules.lst
  lineinfile:
          dest: /usr/src/kamailio/modules.lst
          regexp: '^include_modules='
          insertafter: '^include_modules= '
          line: 'include_modules= presence presence_xml app_python auth_ephemeral db_postgres ndb_redis presence tls uuid websocket'

- name: make all y make install de kamailio
  command: "{{ item }} chdir=/usr/src/kamailio/"
  with_items:
          - make all
          - make install

- name: Clonado de repositorio de omnileads-AIO
  git:
          repo: "{{ omnileads_AIO }}"
          dest: /usr/src/omnileads-AIO

- name: Copiado de los archivos de configuracion de kamailio
  command: "{{ item }} chdir=/usr/src/omnileads-AIO/kamailio/"
  with_items:
          - cp kamailio.cfg /opt/kamailio/etc/kamailio/
          - cp kamctlrc /opt/kamailio/etc/kamailio/
          - cp kamailio.service /etc/systemd/system/
          - cp kamailio-default /etc/default/kamailio
          - cp ngcp-rtpengine-daemon /etc/default/
          - cp rtpengine.conf /etc/rtpengine/

- name: Se añade los modulos al modules.lst
  lineinfile:
          dest: /etc/ssl/openssl.cnf
          regexp: '= policy_match'
          insertafter: '= policy_match'
          line: 'policy          = policy_anything'

- name: Creacion de estructura de directorios de CA de Kamailio
  command: "{{ item }} chdir=/opt/kamailio/etc/"
  with_items:
          - mkdir /opt/kamailio/etc/certs/
          - chmod 0700 /opt/kamailio/etc/certs/
          - mkdir /opt/kamailio/etc/certs/demoCA
          - mkdir /opt/kamailio/etc/certs/demoCA/newcerts
          - touch /opt/kamailio/etc/certs/demoCA/index.txt
#crear path de serial
- set_fact: serial_file_path=/opt/kamailio/etc/certs/demoCA/serial
#crear el archivo serial
- file: path={{ serial_file_path }} state=touch
#crear el contenido de serial
- set_fact: serial_content="01"
#poner el contenido dentro del archivo
- copy: content={{ serial_content }} dest={{ serial_file_path }} 
  become: true
  become_method: su
  become_user: root

- name: Seteo de parametros del certificado de la CA
  set_fact:
          ca_subject: "/C={{ ca_country }}/ST={{ ca_state }}/L={{ ca_locality }}/O={{ ca_organization }}/OU={{ ca_organizationalunit }}/CN={{ ca_commonname }}"

- name: Generar la clave privada y crear los archivos del CA
  shell: "openssl req -new -x509 -extensions v3_ca -keyout key.pem -out cert.pem -days 3650 -passout pass:toor123 -subj \"{{ ca_subject }}\""
  args:
          chdir: /opt/kamailio/etc/certs/demoCA/

- name: Generar certificado de los nodos
  shell: "openssl req -new -nodes -keyout key.pem -out req.pem -subj \"{{ ca_subject }}\""  
  args:
          chdir: /opt/kamailio/etc/certs/

- name: Firmar el certificado de los nodos con el del CA
  shell: "openssl ca -batch -days 1460 -out cert.pem -keyfile demoCA/key.pem -cert demoCA/cert.pem -passin pass:toor123 -infiles req.pem"
  args:
          chdir: /opt/kamailio/etc/certs

- name: Agregar el usuario de kamailio y levantar kamailio como servicio
  shell: "{{ item }}"
  with_items:
          - "adduser --quiet --system --group --disabled-password --shell /bin/false --gecos \"Kamailio\" --home /var/run/kamailio kamailio"
          - mkdir -p /var/run/kamailio
          - chown kamailio:kamailio /var/run/kamailio
          - chown kamailio:kamailio -R /opt/kamailio/etc/certs/
          - systemctl enable kamailio
          - systemctl daemon-reload
          - chown kamailio:kamailio -R /opt/kamailio

