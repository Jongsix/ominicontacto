# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, omnileads
# This file is distributed under the same license as the OMniLeads package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OMniLeads \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-14 11:06-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

# fb9280eb1de14f228dec456e77dd0a0a
#: ../../pbx_integration.rst:5
msgid "Integración entre OMniLeads & PBXs"
msgstr ""

# 1e136d80ded04b9881215bbfd64e2946
#: ../../pbx_integration.rst:7
msgid ""
"Vamos a abordar nuestro ejemplo utilizando Issabel-PBX un proyecto de "
"software libre bien conocido donde además todo lo expuesto aquí puede ser"
" extrapolado como configuración para cualquier IPPBX basada en Asterisk."
msgstr ""

# eb28358eda0d4413bbeb77898030565a
#: ../../pbx_integration.rst:15
msgid ""
"Los pasos descriptos en esta sección son aplicables tanto al esquema "
"donde OMniLeads se encuentra en un host exclusivo y la IPPBX en otro, así"
" como también para el caso en que OMniLeads se ejecuta en Docker "
"conviviendo dentro del mismo host de la IPPBX."
msgstr ""

# d011cef5f1034f0ebc24cc7a790e0cf7
#: ../../pbx_integration.rst:19
msgid "Configuración del troncal SIP en la IPPBX"
msgstr ""

# 8119726a317a4d8b91c33768644162d3
#: ../../pbx_integration.rst:21
msgid ""
"Seleccionamos la creación de un nuevo troncal SIP y completamos la "
"configuración con los siguientes parámetros:"
msgstr ""

# 98c18af8e1354592a20428e5c644c951
#: ../../pbx_integration.rst:24
msgid "En caso de tener OMniLeads en un Host y la IPPBX en otro Host.-"
msgstr ""

# 1331c6b78259410fb73e8e3e5217b51e
#: ../../pbx_integration.rst:38
msgid ""
"En caso de ejecutar OMniLeads con Docker dentro de sistema operativo base"
" de la IPPBX.-"
msgstr ""

# 66a66000221149828e16568a02acc17c
#: ../../pbx_integration.rst:53
msgid ""
"Observar que lo único que cambia entre ambas posibilidades es el "
"parámetro **port**, entre 5160 (OMniLeads en un host aparte) y 5163 "
"(OmniLeads dockerizado sobre el mismo host de la IPPBX) y además el "
"parámetro **host** el cual posee el valor de la IP LAN de la IPPBX."
msgstr ""

# 5a9acffdbbb540308fcc1e2696afba75
#: ../../pbx_integration.rst:57
msgid ""
"Una vez disponible nuestro troncal SIP, pasamos a comprobar accesibilidad"
" utilizando el CLI de Asterisk de la IPPBX."
msgstr ""

# d7fe8a84e73447eb95faa4bdf190e963
#: ../../pbx_integration.rst:66
msgid ""
"Estrablecemos una sesión bash dentro del host donde se ejecuta Issabel-"
"PBX y lanzamos el comando:"
msgstr ""

# 29227ea595e848a5b8384807b8b6377b
#: ../../pbx_integration.rst:72
msgid ""
"Si todo va bien, deberíamos observar OK en la linea de salida "
"correspondiente al nuevo troncal SIP, ya sea con el puerto 5160 o 5163."
msgstr ""

# 2bf8c11409e24d90b36f01991fb5fdc4
#: ../../pbx_integration.rst:79
msgid "Configuración del troncal SIP en OMniLeads"
msgstr ""

# 0fed8b2a75b54271a51f5585712d5f4c
#: ../../pbx_integration.rst:81
msgid ""
"Una vez generado el troncal SIP del lado de la IP-PBX, se procede con la "
"generación de la contraparte correspondiente en OMniLeads."
msgstr ""

# c27dff3d5c34466abe213e9ce25d878d
#: ../../pbx_integration.rst:83
msgid ""
"En caso de tener OMniLeads en un Host y la IPPBX en otro Host, utilizamos"
" la plantilla PBX Omnileads (LAN).-"
msgstr ""

# 86c31c631978485097d9b200b98f815a
#: ../../pbx_integration.rst:109
msgid ""
"En caso de ejecutar OMniLeads con Docker dentro de sistema operativo base"
" de la IPPBX, utilizamos la plantilla Omnileads inside PBX.-"
msgstr ""

# 1f8f6c616d544c34a383b8c7505a3feb
#: ../../pbx_integration.rst:135
msgid ""
"Quedando efectiva nuestra troncal, pasamos a controlar si Issabel está "
"accesible desde OMniLeads, utilizando el CLI de Asterisk de OMniLeads."
msgstr ""

# 35685a94b0cb4819b06d578a58ae9dac
#: ../../pbx_integration.rst:140
msgid ""
"Si estamos ejecutando OMniLeads sobre Docker, para acceder al contenedor "
"que ejecuta el componente Asterisk de OMniLeads, debemos ejecutar el "
"comando: **docker exec -it oml-asterisk-prodenv** , a partir de allí se "
"invoca el CLI."
msgstr ""

# ab32798e62d94f5d9e6bd89a06269d36
#: ../../pbx_integration.rst:147
msgid "La salida del comando debería ser similar a la figura:"
msgstr ""

# 704604c413bb4d2fba0b29ba19299e67
#: ../../pbx_integration.rst:152
msgid ""
"En este punto existe un troncal SIP entre ambos sistemas telefónicos, "
"quedando pendiente la configuración del enrutamiento de llamadas entre "
"ambos sistemas."
msgstr ""

# 7f65164ee0ea40049a7cc315da8249b1
#: ../../pbx_integration.rst:154
msgid ""
"Finalmente ponemos énfasis en relacionar parámetros entre la "
"configuración del SIP trunk en Issabel con la de OMniLeads."
msgstr ""

# 342fb88498614768991d25090831a8c3
#: ../../pbx_integration.rst:156
msgid "Una imagen vale mas que mil palabras:"
msgstr ""

# 88cd60e6f20649abbbe981a8dba05119
#: ../../pbx_integration.rst:162
msgid "Como enviar llamadas desde la IP-PBX hacia OMniLeads"
msgstr ""

# d37decbd0aa5430dbd298e94e5d2a7a5
#: ../../pbx_integration.rst:164
msgid ""
"A continuación se plantea una forma de conectar los recursos de la IP-PBX"
" (rutas entrantes, IVRs, anuncios, extensiones, etc.) con OMniLeads. Es "
"decir, que por ejemplo desde una opción del IVR principal de la compañía "
"se pueda derivar a una campaña entrante de OMniLeads, o bien que una "
"extensión pueda contactar o transferir una llamada hacia una campaña "
"entrante o agente de OMniLeads."
msgstr ""

# 2228f89b88e04badb07ce6f9a819937a
#: ../../pbx_integration.rst:168
msgid ""
"Esto es completamente viable utilizando las *custom extensions* de la IP-"
"PBX, en nuestro caso ejemplar: Issabel-PBX."
msgstr ""

# 1b6ec54b758d4bce9e37d1feef4e3da0
#: ../../pbx_integration.rst:174
msgid "Llamadas hacia rutas entrantes de OMniLeads"
msgstr ""

# 10bb2e4bbd494af0a975962700a9d2e8
#: ../../pbx_integration.rst:176
msgid ""
"Se plantea entonces el ejemplo donde se desea crear una *custom "
"extension* que al marcarla desde otra extensión o bien invocarla desde "
"algún objeto del PBX (IVR, ruta entrante, anuncio, etc.) establezca un "
"canal contra OMniLeads, particularmente apuntando a una *ruta entrante* "
"la cual puede a su vez enviar la llamada hacia una campaña entrante."
msgstr ""

# a2ecb4847e344c1c90543a474154a097
#: ../../pbx_integration.rst:179
msgid ""
"Por un lado entonces, tendremos una ruta entrante en OMniLeads, apuntando"
" por ej. a una campaña entrante:"
msgstr ""

# e53bf371244e4c78be44f073797edbac
#: ../../pbx_integration.rst:184
msgid ""
"Teniendo en cuenta que el DID elegido fue *098098*, en la IPPBX hay que "
"generar una *extension* del tipo *custom*, donde la cadena de *Dial* "
"apunte al troncal SIP contra OMniLeads y el número enviado sea "
"precisamente *098098*."
msgstr ""

# e35f1baac3b94c44af0b8050c577f15c
# 945335a8b89f44d58f1366e874ef8453
#: ../../pbx_integration.rst:190 ../../pbx_integration.rst:219
msgid "En la figura remarcamos tres elementos:"
msgstr ""

# 793160872c9d40d5be3ead49d46f6f90
#: ../../pbx_integration.rst:192
msgid ""
"El número de extensión, no necesariamente debe ser identico al número "
"enviado hacia OMniLeads (3). Puede ser un número cualquiera, siempre y "
"cuando la cadena de Dial de la custom extension coincida con el DID de la"
" ruta entrante de OML (098098 para nuestro ejemplo)."
msgstr ""

# b1a15c2a881c45bd9e3bf7268e7bc2ce
# d99dad84c7b54941a0c271b907d3e18d
#: ../../pbx_integration.rst:193 ../../pbx_integration.rst:222
msgid ""
"El *trunk* a donde apuntar la custom extension. Este valor debe coincidir"
" con el campo *Trunk Name* en el troncal SIP contra OMniLeads generado en"
" la IP-PBX."
msgstr ""

# 4dd760198ee8452abc00201fe07473c0
#: ../../pbx_integration.rst:194
msgid ""
"El número a enviar por el trunk tiene que coincidir con el DID de la ruta"
" entrante de OMniLeads."
msgstr ""

# ef42faed065a4a208d73e0e43f828fe4
#: ../../pbx_integration.rst:196
msgid ""
"De esta manera entonces cualquier extensión de la IPPBX podrá marcar o "
"transferir una llamada hacia esta *custom extension* y la misma será "
"enviada hacia la ruta entrante correspondiente en OMniLeads para "
"finalmente conectar sobre una campaña entrante o el elemento asignado "
"como destino de la ruta entrante en OMniLeads."
msgstr ""

# 430235c27275481a9602078878882cd4
#: ../../pbx_integration.rst:199
msgid ""
"Como mención final, está claro que podremos tener en la IPPBX tantas "
"custom extensions apuntando a diferentes rutas entrantes de OMniLeads "
"como querramos !"
msgstr ""

# 11e59f544b5a499ebc4367051a71cf9a
#: ../../pbx_integration.rst:202
msgid "Llamadas hacia agentes de OMniLeads"
msgstr ""

# 25b29f005e744138b1f860408f4a0088
#: ../../pbx_integration.rst:204
msgid ""
"Para el caso de vincular un Agente de OMniLeads en la IPPBX (es decir que"
" desde una extensión se pueda marcar el número de una *custom extension* "
"y ésta termine enlazando en una llamada a un agente de OMniLeads), el "
"número a enviar en la cadena de Dial de la custom extension estará "
"conformado ya no por un DID de ruta entrante de OMniLeads, sino que será "
"una combinación del ID del agente y su número SIP."
msgstr ""

# 81e662ac6c63473488fc36327d477d5c
#: ../../pbx_integration.rst:208
msgid "Vayamos al grano con esto:"
msgstr ""

# f848a163c88c43c39c158ad19a7d3590
#: ../../pbx_integration.rst:213
msgid ""
"Partiendo de la figura, tomemos al agente *Adrian Belew*. Observar que su"
" ID es igual a 1 y su número SIP es 1006. Por lo tanto a la hora de "
"conformar entonces el número a enviar en la cadena Dial de la custom "
"extension de la IPPBX debemos concatenar el *Número SIP* con su *ID de "
"agente*; en nuestro ejemplo sería **10061** para el agente *Adrian Belew*"
" y **10072** para el agente *Mikael Ackerfeldt*."
msgstr ""

# faa50d58f0e4483abcb0aef67f85abdd
#: ../../pbx_integration.rst:221
msgid ""
"El número de extensión, no necesariamente debe ser identico al número "
"enviado hacia OMniLeads (3). Puede ser un número cualquiera, siempre y "
"cuando la cadena de Dial de la custom extension coincida con la "
"concatenación del ID de agente y su número SIP (10061 para nuestro "
"ejemplo)."
msgstr ""

# 258a9e2b27cf47968c4e64f49a5d54c0
#: ../../pbx_integration.rst:223
msgid ""
"El número a enviar por el trunk tiene que coincidir con la concatenación "
"del ID de agente y su número SIP (10061 para nuestro ejemplo)."
msgstr ""

# 96e470e990ee474db56dea2072f51c49
#: ../../pbx_integration.rst:225
msgid ""
"Se deberá repetir el procedimiento para cada agente que haya que vincular"
" dentro de la IPPBX."
msgstr ""

# a4419ca2e5be4871a4d7617c823e57ec
#: ../../pbx_integration.rst:229
msgid "Llamadas desde OMniLeads hacia la PSTN y recursos de la IPPBX"
msgstr ""

# 1998c51fa4c94afea976fd59d879cdef
#: ../../pbx_integration.rst:231
msgid ""
"Finalmente vamos a generar el enrutamiento saliente dentro de OMniLeads, "
"que permita a los agentes y discadores lanzar llamadas hacia la PSTN por "
"un lado a su vez que permitimos que los agentes puedan marcar o "
"transferir llamadas hacia recursos de la IPPBX como extensiones, ring "
"groups, colas de llamadas ,etc."
msgstr ""

# 62eefa5a271c4e6da2c738674c5c71ed
#: ../../pbx_integration.rst:243
msgid ""
"Simplemente se debe añadir una nueva ruta saliente que apunte al troncal "
"hacia la IPPBX."
msgstr ""

# f654844cf19f447694781e0ca82b49d0
#: ../../pbx_integration.rst:248
msgid ""
"De esta manera la integración queda completamente funcional y ambos "
"sistemas pueden realizar todo tipo de llamadas e interacciones."
msgstr ""

