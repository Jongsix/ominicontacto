# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---
# se deshabilita selinux https://docs.ansible.com/ansible/2.5/modules/command_module.html
- name: Disable Selinux (centos)
  command: "{{ item }}"
  with_items:
      - sed -i 's/\(^SELINUX=\).*/\SELINUX=disabled/' /etc/sysconfig/selinux
      - sed -i 's/\(^SELINUX=\).*/\SELINUX=disabled/' /etc/selinux/config
  when: ansible_os_family == "RedHat"
  become: true
  become_method: sudo

#- name: Do not verify ssl on repositories
#  ini_file: path=/etc/yum.conf section=main option=sslverify no_extra_spaces=yes value=0 state=present
#  become: true
#  become_method: sudo

- name: Write the /etc/hosts of server (cluster)
  blockinfile:
    path: /etc/hosts
    insertafter: EOF
    state: present
    block: |
      {{ omniapp_ip }} {{ omniapp_fqdn}}
      {{ asterisk_ip }} {{ asterisk_fqdn }}
      {{ kamailio_ip }} {{ kamailio_fqdn }}
      {{ database_ip }} {{ database_fqdn }}
      {{ dialer_ip }} {{ dialer_fqdn }}
  when: cluster != 0
  tags: always

- name: Write the /etc/hosts of server (aio)
  blockinfile:
    path: /etc/hosts
    insertafter: EOF
    state: present
    block: |
      {{ omni_ip }} {{ omni_fqdn }}
  when: cluster == 0
  tags: always

- name: Configure yum for ansible (centos)
  ini_file: path=/etc/yum.conf section=main option="{{ item.option }}" no_extra_spaces=yes value="{{ item.value }}" state=present
  with_items:
    - { option: "sslverify", value: "0" }
    - { option: "timeout", value: "300" }
    - { option: "minrate", value: "100" }
  when: ansible_os_family == "RedHat"
  become: true
  become_method: sudo

# Exluimos paquete librrabitmq para que no haga un upgrade este paquete
- name: Exclude librabbitmq in list of repositories (centos)
  ini_file: "path=/etc/yum.repos.d/CentOS-Base.repo section={{ item }} option=exclude no_extra_spaces=yes value=librabbitmq* state=absent"
  with_items:
      - base
      - updates
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

# Se para y deshabilita firewalld
# https://docs.ansible.com/ansible/2.5/modules/shell_module.html#shell-module
- name: Stop firewalld (centos)
  shell: "{{ item }}"
  with_items:
      - systemctl stop firewalld
      - systemctl disable firewalld
  when: ansible_os_family == "RedHat"

# Se instala este paquete necesario antes de hacer update
- name: Install apt-transport-https (debian)
  apt: name=apt-transport-https state=present
  when: ansible_os_family == "Debian"

# Update/upgrade, https://docs.ansible.com/ansible/latest/modules/apt_module.html
#- name: Update/upgrade of debian (debian)
#  apt: "update_cache=yes cache_valid_time=12 upgrade=yes dpkg_options='force-confdef'"
#  when: ansible_os_family == "Debian"

# Instalo linux-headers del kernel  en cuestion
- name: Install linux linux-headers (debian)
  shell: "apt-get install -y linux-headers-$(uname -r)"
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"
  ignore_errors: True

# Update/upgrade del sistema, osea si se ejecuta como deployed - deployer
# https://docs.ansible.com/ansible/2.5/modules/yum_module.html#yum-module
- name: Update/upgrade of centos (centos)
  yum: name='*' state=latest update_cache=yes skip_broken=yes
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: Get the current kernel release. (centos)
  command: uname -r
  register: kernel_release
  when: ansible_os_family == "RedHat"

- name: Install kernel release devel package (centos)
  yum: "name=ftp://ftp.riken.jp/Linux/cern/centos/7/updates/x86_64/Packages/kernel-devel-{{ kernel_release.stdout }}.rpm state=present"
  any_errors_fatal: true
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

# Se instalan paquetes basicos que se necesitan
- name: Install of dependencies (centos)
  yum: name={{ item }} state=present update_cache=yes
  with_items:
      - tftp-server
      - crontabs
      - gcc
      - cronie
      - openssl-devel
      - cronie-anacron
      - make
      - wget
      - gdb
      - which
      - vim
      - uuid-devel
      - net-tools
      - gnutls-devel
      - python-devel
      - texinfo
      - expect.x86_64
      - expect-devel.x86_64
      - kernel-headers
      - acl
      - webkitgtk3-devel.x86_64
      - perl*
      - librabbitmq*
      - pcre-devel
      - libpcap-devel
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: Install of dependencies (debian)
  apt: name={{ item }} state=present
  with_items:
      - build-essential
      - vim
      - net-tools
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"
