---

- name: Exclude postgres in list of repositories
  ini_file: "path=/etc/yum.repos.d/Sangoma-Base.repo section={{ item }} option=exclude no_extra_spaces=yes value=postgres* state=present"
  with_items:
      - sng-base
      - sng-updates
  become: true
  become_method: sudo
  when: ansible_os_family == "Sangoma"

- name: Update/upgrade of centos
  yum: name='*' state=latest update_cache=yes
  become: true
  become_method: sudo
  when: LOCALHOST == "true" and ansible_os_family == "Sangoma"

- name: Exclude postgres in list of repositories
  ini_file: "path=/etc/yum.repos.d/CentOS-Base.repo section={{ item }} option=exclude no_extra_spaces=yes value=postgres* state=present"
  with_items:
      - base
      - updates
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: Installation of asterisk packages
  yum: name={{ item }} state=present
  with_items:
      - ncurses-devel
      - ncurses-libs
      - libxml2
      - libxml2-devel
      - sqlite-devel
      - newt-devel
      - net-snmp-devel
      - unixODBC
      - unixODBC-devel
      - libtiff-devel
      - audiofile-devel
      - gtk2-devel
      - subversion
      - sendmail
      - sendmail-cf
      - lame
  become: true
  become_method: sudo
  when: DOCKER == "false"

- name: Installation of kamailio packages
  yum: name={{ item }} state=present
  with_items:
    - libevent-devel
    - gcc
    - gcc-c++
    - bison
    - bison-devel
    - flex
    - expat
    - expat-devel
    - libuuid
    - libuuid-devel
    - xmlrpc-c-devel
    - lynx
    - pcre
    - pcre-devel
    - libtool-ltdl-devel
    - iptables-devel
    - iptables-services
    - libpcap-devel
    - glib2-devel
    - json-glib-devel
    - redis
    - hiredis
    - hiredis-devel
    - libunistring-devel.x86_64
  become: true
  become_method: sudo

- meta: clear_host_errors

- name: Install of postgresql 9.6
  yum: "name={{ postgresql_url }} state=present validate_certs=no "
  become: yes
  become_method: sudo

- yum: name=postgresql96* state=present
  become: yes
  become_method: sudo

- name: Install the app and services packages
  yum: "name={{ item }} state=present"
  with_items:
      - python-psycopg2.x86_64
      - python2-psycogreen.noarch
      - python
      - python-virtualenv
      - python-devel
      - mysql-connector-python
      - mysql-devel
      - nginx
      - nginx-all-modules
      - libjpeg-turbo-devel
      - libffi-devel
      - libffi
      - libpqxx
      - libpqxx-devel
      - cairo-devel
      - pycairo
      - pycairo-devel
      - cairo
      - libpqxx
      - libpqxx-devel
      - python-pycha
      - libxslt-devel
      - libxslt-python
      - libxslt
      - python-lxml
      - libxslt-python
      - postgresql-plpython
      - postgresql-libs
      - postgresql-devel
      - libsass-devel
      - libsass
      - python2-pip.noarch
  become: yes
  become_method: sudo
- meta: clear_host_errors

- name: install php56wpgsql
  yum: name=php56w-pgsql state=present
- meta: clear_host_errors
  become: yes
  become_method: sudo

#- name: install phppgsql
#  yum: name=php-pgsql state=present
#- meta: clear_host_errors
#  become: yes
#  become_method: sudo

- name: Change /etc/hostname
  template: src=templates/hostname.j2 dest=/etc/hostname
  become: true
  become_method: sudo

- name: Edit sudoers to execute binaries withouth password
  lineinfile: "dest=/etc/sudoers line=\"{{ usuario }} ALL=(ALL) NOPASSWD: /usr/bin/rsync, {{ install_prefix }}asterisk/sbin/asterisk\""
  when: asterisk_location != ""
  become: yes
  become_method: sudo

- name: Edit sudoers to execute binaries withouth password
  lineinfile: "dest=/etc/sudoers line=\"{{ usuario }} ALL=(ALL) NOPASSWD: /usr/bin/docker, /usr/bin/rsync, /usr/sbin/asterisk\""
  when: asterisk_location == ""
  become: yes
  become_method: sudo

- name: Reboot the server for kernel update
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  become: true
  tags: reboot
  ignore_errors: true
  when: LOCALHOST == "true"

- name: Wait for the server to finish rebooting
  become: no
  local_action: wait_for host="{{ omni_ip }}" delay=15 state=started port={{ ssh_port }} timeout=600
  tags: reboot
  when: LOCALHOST == "true"
