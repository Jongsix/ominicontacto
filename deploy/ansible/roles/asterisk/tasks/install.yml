---

- set_fact: asterisk_tar=asterisk-13.22.0.tar.gz
- set_fact: libpri_tar=libpri-1.6.0.tar.gz
- set_fact: jansson_tar=jansson-2.7.tar.gz
- set_fact: dahdi_tar=dahdi-linux-complete-2.11.1+2.11.1.tar.gz
- set_fact: iksemel_tar=iksemel-1.5.1.3.zip

- name: Descarga de paquetes de asterisk
  get_url: "url={{ item }} dest=/usr/src/"
  with_items:
        - "{{ dahdi_linux }}"
        - "{{ libpri }}"
        - "{{ iksemel }}"
        - "{{ asterisk_v13 }}"
        - "{{ jansson }}"
  become: yes
  become_method: sudo

- name: Descompresion de todos los paquetes
  unarchive: "src=/usr/src/{{ item }} dest=/usr/src/ remote_src=yes"
  with_items:
      - "{{ asterisk_tar }}"
      - "{{ libpri_tar }}"
      - "{{ dahdi_tar }}"
      - "{{ iksemel_tar }}"
      - "{{ jansson_tar }}"
  become: yes
  become_method: sudo

- name: Borrado de los tar
  file: "dest=/usr/src/{{ item }} state=absent"
  with_items:
      - "{{ asterisk_tar }}"
      - "{{ libpri_tar }}"
      - "{{ dahdi_tar }}"
      - "{{ iksemel_tar }}"
      - "{{ jansson_tar }}"
  become: yes
  become_method: sudo

- name: Create asterisk directory
  file: path={{ install_prefix }}asterisk state=directory owner={{ usuario }} group={{ usuario }}
  become: yes
  become_method: sudo

- name: Create iksemel directory
  file: path={{ install_prefix }}iksemel-1.5.1.2 state=directory owner={{ usuario }} group={{ usuario }}
  become: yes
  become_method: sudo

- name: Link libtool simbolic link (debian)
  file: state=link src=/usr/bin/libtoolize dest=/usr/bin/libtool owner=root group=root force=true
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

- name: Instalacion de Iksemel-Master
  shell: "{{ item }} chdir=/usr/src/iksemel-1.5.1.3"
  with_items:
        - ./autogen.sh
        - ./configure --prefix={{ install_prefix }}iksemel-1.5.1.2
        - make
        - make install
  become: yes
  become_method: sudo

- name: Instalacion de Dahdi Linux
  shell: "{{ item }} chdir=/usr/src/dahdi-linux-complete-2.11.1+2.11.1"
  with_items:
        - "make all"
        - "make install"
        - "make config"
  become: yes
  become_method: sudo

- name: Instalacion de libpri
  shell: "{{ item }} chdir=/usr/src/libpri-1.6.0"
  with_items:
          - "make"
          - "make install"
  become: yes
  become_method: sudo

- name: Create jansson directory
  file: path={{ install_prefix }}jansson-2.7 state=directory owner={{ usuario }} group={{ usuario }}
  become: yes
  become_method: sudo

- name: Instalacion de jansson
  shell: "{{ item }} chdir=/usr/src/jansson-2.7"
  with_items:
          - "autoreconf -i"
          - "./configure --libdir={{ install_prefix }}jansson-2.7/lib64 --prefix={{ install_prefix }}jansson-2.7"
          - "make"
          - "make install"
  become: yes
  become_method: sudo

#- name: Creacion de carpeta /tmp/downloads
#  file: path=/tmp/downloads state=directory mode=755
#  become: yes
#  become_method: sudo

#- name: Descarga de pjsip-project
#  shell: "wget -O /tmp/downloads/pjproject-2.7.2.tar.bz2 http://www.pjsip.org/release/2.7.2/pjproject-2.7.2.tar.bz2 chdir=/tmp/downloads"
#  - shell: "wget -O /tmp/downloads/pjproject-2.7.2.md5 http://www.pjsip.org/release/2.7.2/MD5SUM.TXT chdir=/tmp/downloads"
#  register: command_result
#  failed_when:
#    - "'ERROR 404: Not Found' not in command_result.stderr"
#    - "command_result.rc != 0"
#  become: yes
#  become_method: sudo

- name: Instalacion de asterisk (centos)
  shell: "{{ item }} chdir=/usr/src/asterisk-13.22.0"
  with_items:
          - contrib/scripts/install_prereq install
          - ./configure --libdir={{ install_prefix }}asterisk/lib64 --prefix={{ install_prefix }}asterisk --with-pjproject-bundled
  when: ansible_os_family == "RedHat"

- name: Seteo del countrycode para asterisk
  debconf: name='libvpb0' question='libvpb0/countrycode' value={{ country_code }} vtype='string'
  when: ansible_os_family == "Debian"

- name: Instalacion de asterisk (debian)
  shell: "{{ item }} chdir=/usr/src/asterisk-13.22.0"
  with_items:
          - echo 'y' | contrib/scripts/install_prereq install
          - ./configure --libdir={{ install_prefix }}asterisk/lib64 --prefix={{ install_prefix }}asterisk --with-pjproject-bundled
  when: ansible_os_family == "Debian"

- shell: "contrib/scripts/get_mp3_source.sh chdir=/usr/src/asterisk-13.22.0"
  register: command_result
  become: yes
  become_method: sudo
  ignore_errors: yes

- shell: "{{ item }} chdir=/usr/src/asterisk-13.22.0"
  with_items:
          - make menuselect.makeopts
          - menuselect/menuselect --enable format_mp3
          - make
          - make install
          - make config
          - ldconfig
 # become: yes
 # become_method: sudo

- name: Organizing the asterisk directories
  shell: "{{ item }} chdir={{ install_prefix }}"
  with_items:
      - mv jansson-2.7 asterisk/
      - mv iksemel-master asterisk/

- name: Erase the downloaded directories of asterisk
  file: path=/usr/src/{{ item }} state=absent
  with_items:
    - iksemel-master
    - asterisk-13.22.0
    - jansson-2.7
    - libpri-1.6.0
    - dahdi-linux-complete-2.11.1+2.11.1
