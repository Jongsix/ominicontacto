# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# Se crea /opt/omnileads/kamailio directory
- name: Create prefix directory
  file: state=directory path={{ install_prefix }} owner={{ usuario }} group={{ usuario }}

# Se sestean variables de nombre de los targz que se descargan
- set_fact: asterisk_tar=asterisk-{{ asterisk_version }}.tar.gz

# Se descargan los paquetes
- name: Download of asterisk sources
  get_url: "url={{ asterisk_repo }} dest=/usr/src/ timeout=120"

# Se descomprimen
- name: Untar of sources
  unarchive: "src=/usr/src/{{ asterisk_tar }} dest=/usr/src/ remote_src=yes"

# Se borran
- name: Erase of tar.gz files
  file: "dest=/usr/src/{{ asterisk_tar }} state=absent"

# Se crea el directorio /opt/omnileads/asterisk
- name: Creation of asterisk prefix directory
  file: path={{ install_prefix }}asterisk state=directory owner={{ usuario }} group={{ usuario }}

# Pasos para instalar asterisk  se comienza con el install de prerequisitos y luego con el configure
- name: Installation of prerequisites packages (centos)
  shell: "{{ item }} chdir=/usr/src/asterisk-{{ asterisk_version }}"
  with_items:
    - contrib/scripts/install_prereq install
  retries: 3
  delay: 3
  register: result
  until: result.rc == 0

- name: Download of res_json module
  git: repo={{ res_json_repo }} dest=/usr/src/asterisk-{{ asterisk_version }}/asterisk-res_json/ version=master

- name: Execute res_json install script
  shell: "./asterisk-res_json/install.sh chdir=/usr/src/asterisk-{{ asterisk_version }}"

# Se sigue con el la ejecucion del configure, esto para el PE
- name: Configure of asterisk
  shell: "./configure --libdir={{ install_prefix }}asterisk/lib64 --prefix={{ install_prefix }}asterisk --with-jansson-bundled chdir=/usr/src/asterisk-{{ asterisk_version }}"

# Se obtienen las fuentes mp3
- shell: "contrib/scripts/get_mp3_source.sh chdir=/usr/src/asterisk-{{ asterisk_version }}"
  failed_when: false
  retries: 3
  delay: 3
  register: result
  until: result.rc == 0

# Se hace la instalacion de asterisk
- name: Make menuselect opts and make install of Asterisk
  shell: "{{ item }} chdir=/usr/src/asterisk-{{ asterisk_version }}"
  with_items:
    - make menuselect.makeopts
    - menuselect/menuselect --disable BUILD_NATIVE menuselect.makeopts
    - menuselect/menuselect --enable res_json menuselect.makeopts
    - menuselect/menuselect --enable format_mp3 menuselect.makeopts
    - menuselect/menuselect --enable codec_opus menuselect.makeopts
    - make -j 10
    - make install
    - make config
    - ldconfig
    - make samples
  retries: 6
  delay: 3
  register: result
  until: result.rc == 0

# Se borran los paquetes descargados
- name: Erase the downloaded directories of asterisk
  file: path=/usr/src/asterisk-{{ asterisk_version }} state=absent
