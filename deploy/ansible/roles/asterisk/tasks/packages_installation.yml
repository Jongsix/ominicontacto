---

# Se crea el repo de sngrep desde el template https://docs.ansible.com/ansible/2.5/modules/template_module.html#template-module
#  https://docs.ansible.com/ansible-container/container_yml/template.html
- name: Creation of sngrep repo
  template: src=templates/etc/irontec.repo dest=/etc/yum.repos.d/irontec.repo
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"
  tags: ['asterisk']

# Se importa la rpm key
- name: Import of irontec public key
  rpm_key: state=present key=http://packages.irontec.com/public.key validate_certs=no
  become: true
  become_method: sudo
  tags: ['asterisk']
  when: ansible_os_family == "RedHat"

# Se descarga e instala el repositorio epel-release
- name: Install of epel-release repo
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    - centos-release-gluster
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

#  Instalo paquetes de asterisk no se instalan
- name: Installation of asterisk packages (centos)
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - dh-autoreconf
    - http://mirror.centos.org/centos/7/os/x86_64/Packages/postgresql-odbc-09.03.0100-2.el7.x86_64.rpm
    - lame
    - sqlite-devel
    - sngrep
    - subversion
    - unixODBC
    - unzip
  tags: postinstall
  when: ansible_os_family == "RedHat"

  # Intalo los paquetes necesarios para la parte VoIP
- name: Installation of asterisk packages (debian)
  apt: "name={{ item }} state=present dpkg_options=no-triggers"
  with_items:
    - dh-autoreconf
    - lame
    - libavcodec-dev
    - mpg123
    - odbc-postgresql
    - postgresql-client
    - sox
    - subversion
    - unixodbc-dev
    - uuid
    - unzip
  tags: postinstall
  when: ansible_os_family == "Debian"

- name: Install of cluster packages (centos cluster)
  yum: name={{ item }} state=present
  with_items:
    - python-pip
    - python-psycopg2.x86_64
    - glusterfs-server
  when: ansible_os_family == "RedHat" and cluster != 0

- name: Install of glusterfs-server (debian cluster)
  apt: name=glusterfs-server state=present
  when: ansible_os_family == "Debian" and cluster != 0

- name: Install of cluster packages (debian cluster)
  apt: name={{ item }} state=present
  with_items:
    - postgresql-server-dev-{{ postgresql_version }}
    - python
    - python-pip
    - python-psycopg2
  when: ansible_os_family == "Debian" and cluster != 0
