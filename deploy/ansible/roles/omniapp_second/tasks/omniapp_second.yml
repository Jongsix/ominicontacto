# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# Se sube el archivo de config de nginx
- name: Upload nginx.conf configuration
  template: src=templates/etc/nginx.conf.j2 dest=/etc/nginx/nginx.conf
  become: true
  become_method: sudo

# Se sube el archivo de configuracion de omnileads para nginx
- name: Create of ominicontacto.conf
  template: src=templates/etc/ominicontacto.conf dest=/etc/nginx/conf.d/ominicontacto.conf owner={{ usuario }} group={{ usuario }}
  become: true
  become_method: sudo
  tags: ['postinstall','changenetwork']

# Se pasan los certificados creados en kamailio a la carpeta nginx_certs
- name: Copy of the certificates in nginx (aio)
  copy: "src={{ kamailio_location }}/etc/certs/{{ item }} dest={{ install_prefix }}nginx_certs/ remote_src=yes"
  with_items:
      - cert.pem
      - key.pem
  become: true
  become_method: sudo
  tags: ['kamailio','changenetwork']
  when: cluster == 0

# Se pasan los certificados creados en kamailio a la carpeta nginx_certs
- name: Copy the certificates from host to omniapp server (cluster)
  copy: src=/var/tmp/ansible/{{ item }} dest={{ install_prefix }}nginx_certs/
  with_items:
    - ca_cert.pem
    - cert.pem
    - key.pem
  when: cluster != 0
  tags: changenetwork

- name: Copy register server certificate in default location
  copy: src=/var/tmp/ansible/cert dest={{ install_prefix }} owner={{ usuario }} group={{ usuario }}
  tags: postinstall

# Se crea el archivo .ini de uwsgi. Para mas info revisar documentacion de uwsgi
- name: Create of oml_uwgsi.ini script
  template: src=templates/run/oml_uwsgi.ini dest={{ install_prefix }}run/oml_uwsgi.ini mode=755 owner={{ usuario }} group={{ usuario }}

# Se crea el archivo .ini de uwsgi. Para mas info revisar documentacion de uwsgi
- name: Create of ominicontacto_app.ini script
  template: src=templates/run/ominicontacto_app.ini dest={{ install_prefix }}run/ominicontacto_app.ini mode=755 owner={{ usuario }} group={{ usuario }}
  tags: postinstall

# Se crea el arhivo de systemd para omnileads daemon
- name: Create of omnileads service
  template: src=templates/omnileads.service dest=/etc/systemd/system/omnileads.service owner=root group=root mode=650
  tags: postinstall

# Se inicia y habilita el servicio
- name: Start the omnileads-daemon service
  systemd: name=omnileads state=restarted enabled=yes daemon_reload=yes
  tags: postinstall

# Se ejecuta una funcion de sql que hizo ale, esto es para los reportes
- name: Add queuelog trigger to database
  shell: psql -U {{ postgres_user}} -h {{ database_fqdn }} -d {{ postgres_database }} -c '\i {{ install_prefix }}ominicontacto/reportes_app/sql/plpython/replace_insert_queue_log_ominicontacto_queue_log.sql'
  become: true
  environment:
    PGPASSWORD: "{{ postgres_password }}"
  tags: ['never','postinstall']
  become_method: sudo

# Se sube el script de backup-restore
- name: Generate extra scripts
  template: src=templates/bin/{{ item.src }} dest={{ install_prefix }}bin/{{ item.dest }} owner={{ usuario }} group={{ usuario }} mode=755
  with_items:
    - { src: backup-restore.sh, dest: backup-restore.sh }
    - { src: conversor.sh, dest: conversor.sh }
    - { src: omni-asterisk-logout.py.j2, dest: omni-asterisk-logout.py }
  tags: postinstall

- name: Erase files related to php supervision
  file: state=absent path={{ item }}
  with_items:
    - /etc/nginx/conf.d/supervision.conf
    - "{{ install_prefix }}Omnisup"
  tags: ['never','postinstall']

# Toca hacer esta tarea aparte para que no salga el error de nginx que se soluciona al rebotear el server
- name: Enable of nginx
  command: systemctl enable nginx
  become: true
  become_method: sudo
  when: ansible_os_family == "RedHat"

# Starteo y habilito nginx
- name: Restart of nginx (debian)
  service: name=nginx state=restarted enabled=yes
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

# Starteo y habilito nginx
- name: Reload of nginx
  service: name=nginx state=reloaded enabled=yes
  become: true
  become_method: sudo
  tags: ['never','postinstall','kamailio','changenetwork']

- name: Change ownership of /var/lib/nginx/tmp/
  file: state=directory owner={{ usuario }} group={{ usuario }} path=/var/lib/nginx recurse=yes

- name: Creation of Omnileads uninstall script
  template: src=templates/bin/oml-uninstall.sh dest=/usr/sbin/oml-uninstall mode=755 owner=root group=root
  tags: postinstall
