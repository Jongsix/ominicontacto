# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# En este grupo de tasks se encarga de crear los certificados de autoridad certificante de y de nodo que van a usar kamailio y nginx
# No se va a explicar cada tarea porque esto ya funciona y no ha habido que modificarlo.
# https://www.kamailio.org/dokuwiki/doku.php/tls:create-certificates

- name: Modificacion del /etc/pki/tls/openssl.cnf
  template: src=roles/kamailio/templates/etc/openssl.cnf.j2 dest=/etc/pki/tls/openssl.cnf

- name: Creacion de {{ certs_location }}/demoCA y /newcerts
  file: "path={{ item }} state=directory mode=0700"
  with_items:
    - "{{ certs_location }}/demoCA"
    - "{{ certs_location }}/demoCA/newcerts"
- file: path={{ certs_location }}/demoCA/index.txt state=touch mode=0755

#crear path de serial
- set_fact: serial_file_path={{ certs_location }}/demoCA/serial
#crear el archivo serial
- file: path={{ serial_file_path }} state=touch
#crear el contenido de serial
- set_fact: serial_content="01"
#poner el contenido dentro del archivo
- copy: content={{ serial_content }} dest={{ serial_file_path }}

- name: Seteo de parametros del certificado de la CA
  set_fact:
    ca_subject_ca: "/C={{ ca_country }}/ST={{ ca_state }}/L={{ ca_locality }}/O={{ ca_organization }}/OU={{ ca_organizationalunit }}/CN=Omnileads"
    ca_subject_node: "/C={{ ca_country }}/ST={{ ca_state }}/L={{ ca_locality }}/O={{ ca_organization }}/OU={{ ca_organizationalunit }}/CN={{ omni_fqdn }}"

- name: Generar la clave privada y crear los archivos del CA
  shell: "openssl req -new -x509 -extensions v3_ca -keyout key.pem -out cert.pem -passout pass:toor123 -subj \"{{ ca_subject_ca }}\""
  args:
    chdir: "{{ certs_location }}/demoCA/"

- name: Generar certificado de los nodos
  shell: "openssl req -new -nodes -keyout key.pem -out req.pem -subj \"{{ ca_subject_node }}\""
  args:
    chdir: "{{ certs_location }}/"

- name: Firmar el certificado de los nodos con el del CA
  shell: "openssl ca -extensions v3_req  -batch -out cert.pem -keyfile demoCA/key.pem -cert demoCA/cert.pem -passin pass:toor123 -infiles req.pem"
  args:
    chdir: "{{ certs_location }}"
  register: command_result
  failed_when: false

- name: Set permission to {{ certs_location }}
  shell: "chown {{ usuario }}:{{ usuario }} -R {{ certs_location }}/"
  when: is_docker == "false"
