# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---
# Set_fact es para setear variables, aqui seteo el nombre de la carpeta que se crea al descargar rtpengine
# Seteo esta variable que va en un Makefile para instalar en centos
- set_fact: kernel="/usr/src/kernels/$(shell uname -r)"
  when: ansible_os_family == "RedHat"

# Descargo rtpengine desde la fuente, me descarga un .tar.gz
- name: Download of RTPengine-mr5.5.3.1
  get_url: url={{ rtpengine_repo }} dest=/usr/src/
  register: destino
  become: true
  become_method: sudo
  when: rtpengine_installed|failed

# Untareo el archivo recien descargado
- name: Untar the file
  unarchive: "src=/usr/src/{{ rtpengine_name }}.tar.gz dest=/usr/src/ remote_src=yes"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed

# Borro el tar
- name: Delete tar file
  file: "dest=/usr/src/{{ rtpengine_name }}.tar.gz state=absent"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed

###### Begin install in centos #####
# Comienzo a instalar para  centos, toca asi porque los procesos son diferentes
# algo asi es para centos https://voipmagazine.wordpress.com/2015/02/17/rtpengine-compilation-and-installation-in-fedora-redhat/

# Importacion de la llave para instalar ffmpeg (lo pide la version que usamos de rtpengine)
- name: Import of ffmpeg repository key (centos)
  rpm_key: state=present key=http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro validate_certs=no
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Instalo el repositorio
- name: Install of ffmpeg repository (centos)
  yum: name=http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm state=present
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Instalo los paquetes que se necesitan
- name: Install of ffmpeg (centos)
  yum: name={{ item }} state=present
  with_items:
      - ffmpeg
      - ffmpeg-devel
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Make de rtpengine en /usr/src/rtpengine/daemon
- name: Installation of RTPengine (centos)
  shell: "make chdir=/usr/src/{{ rtpengine_name }}/daemon"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Aca hago la modificacion del makefile del modulo de kernel, uso la variable que setee en el set_fact
- name: Modify of the RTPengine kernel module to let it know where is our kernel (centos)
  lineinfile: "path=/usr/src/{{ rtpengine_name }}/kernel-module/Makefile regexp=\"^KSRC\" line=\"KSRC   ?= {{ kernel }}\""
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Se hace el make del modulo de kernel
- name: Installation of RTPengine kernel module (centos)
  shell: "make chdir=/usr/src/{{ rtpengine_name }}/kernel-module"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Se inserta el modulo creado
- name: Insert the kernel module created for RTPengine (centos)
  shell: "insmod xt_RTPENGINE.ko chdir=/usr/src/{{ rtpengine_name }}/kernel-module"
  register: command_result
  failed_when:
    - "'File exists' not in command_result.stderr"
    - "command_result.rc != 0"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# Se hace make de una cosa llamada iptables-extension
- name: Installation of IPtables extensions (centos)
  shell: "make chdir=/usr/src/{{ rtpengine_name }}/iptables-extension"
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

# El so creado se mete a xtables no se bien para que pero supongo que para cargar las reglas de iptables para rtpengine
- name: Copy of iptables library to lib64/xtables (centos)
  copy: src=/usr/src/{{ rtpengine_name }}/iptables-extension/libxt_RTPENGINE.so dest=/lib64/xtables remote_src=yes
  become: true
  become_method: sudo
  when: rtpengine_installed|failed and ansible_os_family == "RedHat"

####### End of install in centos #########

####### Begin of install in debian #######
# Ahora para debien, es mas facil porque ya hay debs de rtpengine

# Instalacion de ffmpeg
- name: Install of ffmpeg (debian)
  apt: name=ffmpeg state=present
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

# Se hace el buildpackage para generar los debs
- name: Build of rtpengine with dpkg (debian)
  shell: "dpkg-buildpackage -uc -us chdir=/usr/src/{{ rtpengine_name }}"
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

# Se instalan los debs como tenemos congelada la version de rtpengine no van a cambiar los nombres de loss deb
- name: Install rtpengine debs (debian)
  apt: deb=/usr/src/{{ item }}
  with_items:
    - ngcp-rtpengine-daemon_5.5.3.1+0~mr5.5.3.1_amd64.deb
    - ngcp-rtpengine-iptables_5.5.3.1+0~mr5.5.3.1_amd64.deb
    - ngcp-rtpengine-dbg_5.5.3.1+0~mr5.5.3.1_amd64.deb
    - ngcp-rtpengine-utils_5.5.3.1+0~mr5.5.3.1_all.deb
    - ngcp-rtpengine-kernel-dkms_5.5.3.1+0~mr5.5.3.1_all.deb
    - ngcp-rtpengine-recording-daemon_5.5.3.1+0~mr5.5.3.1_amd64.deb
    - ngcp-rtpengine_5.5.3.1+0~mr5.5.3.1_all.deb
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

####### End of install in debian #######
