# -*- coding: utf-8 -*-

import os

#Se setea debug True o False, dependiendo de desarrollo

{% if desarrollo == 1 %}
DEBUG = True
{% else %}
COMPRESS_ENABLED = True
DEBUG = False
{% endif %}
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = [
    "*",
]

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's1+*bfrvb@=k@c&9=pm!0sijjewneu5p5rojil#q+!a2y&as-4'

# Datos de conexi√≥n de base db postgresql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': '{{ database_fqdn }}',
        'PORT': 5432,
        'NAME': '{{ postgres_user }}',
        'USER': '{{ postgres_database }}',
        'CONN_MAX_AGE': 300,
        'ATOMIC_REQUESTS': True,
    }
}

# Ubicaciones de staticos y media
STATIC_ROOT = "{{ install_prefix }}static"
MEDIA_ROOT =    "{{ install_prefix }}media_root"

# IPs y hostnames
OML_OMNILEADS_IP = "{{ omniapp_fqdn }}"
OML_KAMAILIO_IP = "{{ kamailio_ip }}/255.255.255.255"
OML_ASTERISK_HOSTNAME = "root@{{ asterisk_fqdn }}"

# Comandos que se ejecutan desde django
OML_RELOAD_CMD = 'ssh root@{{ asterisk_fqdn }} \'/usr/sbin/asterisk -rx "core reload"\''
OML_KAMAILIO_CMD = "ssh root@{{ kamailio_fqdn }} 'kamcmd -s {{ kamailio_location }}/run/kamailio/kamailio_ctl autheph.dump_secrets' |awk -F ' ' '{print $3}' |head -1"
OML_GENERARSK_CMD = "ssh root@{{ kamailio_fqdn }} 'sed -i \"s/\({0}\).*/{1}!g\\\"/\" {2}kamailio-local.cfg'"

# URL externas
OML_GRABACIONES_URL = "https://{{ omniapp_fqdn }}/grabaciones"
OML_SUPERVISION_URL = "https://{{ omniapp_fqdn }}:10443/Omnisup/index.php?page=Detalle_Campana&supervId="
OML_WOMBAT_URL = "http://{{ dialer_fqdn }}:8080/wombat"

# Tiempo de session en segundo por ejemplo 10 minutos=600
SESSION_COOKIE_AGE = {{ session_cookie_age }}

# Ubicaciones de archivos
OML_SIP_FILENAME = "{{ asterisk_location }}/etc/asterisk/oml_sip_endpoints.conf"
OML_QUEUES_FILENAME = "{{ asterisk_location }}/etc/asterisk/oml_queues.conf"
OML_RUTAS_SALIENTES_FILENAME="{{ asterisk_location }}/etc/asterisk/oml_extensions_outr.conf"
OML_ASTERISK_REMOTEPATH = "{{ asterisk_location }}/etc/asterisk/"
OML_BACKLIST_REMOTEPATH  = "{{ asterisk_location }}/var/spool/asterisk/"
OML_WOMBAT_FILENAME = "{{ install_prefix }}wombat-json/"

EPHEMERAL_USER_TTL = 28800
OML_KAMAILIO_HOSTNAME = "root@{{ kamailio_fqdn }}"
OML_KAMAILIO_CMD = "kamcmd -s {{ kamailio_location }}/run/kamailio/kamailio_ctl autheph.dump_secrets"

# Credenciales de AMI
ASTERISK = {
    'AMI_USERNAME': "{{ ami_user }}",  # Usuario para AMI
    'AMI_PASSWORD': "{{ ami_password }}",  # Password para usuario para AMI
    'HTTP_AMI_URL': "http://{{ asterisk_fqdn }}:7088",
}

# Credenciales para wombat API

OML_WOMBAT_USER = "demoadmin"
OML_WOMBAT_PASSWORD = "demo"

# Seteo de logging
_logging_output_file = os.environ.get("OML_LOGFILE", "django.log")
assert os.path.split(_logging_output_file)[0] == "",\
    "La variable de entorno OML_LOGFILE solo debe contener " +\
    "el nombre del archivo, SIN directorios."
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)-15s [%(levelname)7s] '
                '%(name)20s - %(message)s')
        },
    },
    'filters': {
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '{{ install_prefix }}log/{0}'.format(_logging_output_file),
            'formatter': 'verbose'
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
    },
   'django.security.DisallowedHost': {
        'handlers': ['mail_admins'],
        'level': 'CRITICAL',
        'propagate': False,
    },
}

#Defender variables
DEFENDER_BEHIND_REVERSE_PROXY = True
DEFENDER_LOGIN_FAILURE_LIMIT = 1
DEFENDER_DISABLE_IP_LOCKOUT = True
DURACION_ASIGNACION_CONTACTO_PREVIEW=30

# Comando y paths de audios del sistema
TMPL_OML_AUDIO_CONVERSOR = ["sox", "-t", "wav", "<INPUT_FILE>",
    "-r", "8k", "-c", "1", "-e", "signed-integer",
    "-t", "wav", "<OUTPUT_FILE>"]
TMPL_OML_AUDIO_CONVERSOR_EXTENSION = ".wav"
ASTERISK_AUDIO_PATH = "{{ asterisk_location }}/var/lib/asterisk/sounds/"
OML_AUDIO_FOLDER = "oml/"

# Formato de grabaciones
MONITORFORMAT = '{{ formato_conversion }}'
# Calificacion de agenda
CALIFICACION_REAGENDA = '{{ schedule }}'

{% if desarrollo == 1 %}
CORS_ORIGIN_ALLOW_ALL = True
LOCAL_APPS = ['sslserver', 'django_extensions', 'corsheaders']
DJANGO_CORS_HEADERS = True
DJANGO_DEBUG_TOOLBAR = True
if DJANGO_DEBUG_TOOLBAR:
    INTERNAL_IPS = ['127.0.0.1', OML_OMNILEADS_IP]
    def show_toolbar(request):
        return True
    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK" : show_toolbar,
    }
    LOCAL_APPS += ['debug_toolbar']

{% else %}
LOCAL_APPS = []
DJANGO_DEBUG_TOOLBAR = False
DJANGO_CORS_HEADERS = False
if DJANGO_DEBUG_TOOLBAR:
    INTERNAL_IPS = ['127.0.0.1']
{% endif %}

CONSTANCE_CONFIG = {}
MIDDLEWARE_PREPPEND = []
MIDDLEWARE_APPEND = []
TEMPLATES_CONTEXT_PROCESORS_APPEND = []
