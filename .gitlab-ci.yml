# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: alejandrozf/docker-stuff:python-flake8
  # Pick zero or more services to be used on all builds.
  # Only needed when using a docker container to run your tests in.
  # Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
  services:
    - name: alejandrozf/docker-stuff:postgres-plpython-template1
      alias: plpython
    - redis
  # This folder is cached between builds
  # http://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - /root/.cache/pip/
  before_script:
    - mkdir -p /opt/omnileads/ominicontacto/
    - touch /opt/omnileads/ominicontacto/django.log
    - mkdir -p /opt/omnileads/static
    - mkdir -p /opt/omnileads/media_root
    # FIXME: what follows is a hack to simulate we have the 'sox' program, we should have the real program
    # as a docker image or installed by this script
    - touch sox
    - chmod +x sox
    - mv sox /usr/bin/
    - pip install -r requirements/tests.txt
  variables:
    POSTGRES_DB: omnileads
    POSTGRES_USER: omnileads
    POSTGRES_PASSWORD: omnileadsrw
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    DJANGO_SETTINGS_MODULE: "ominicontacto.settings.gitlab"
  script:
    - python checks.py
    - flake8
    - python manage.py test --failfast
    - python manage.py compilemessages
  only:
    - merge_requests
    - /^pre-release-.*$/
    - schedules
    - web


docker-prodenv-build-push:
  stage: build
  image: alejandrozf/docker-ansible
  before_script:
    - dockerd&
  variables:
    TMP: /root/.local/lib
    TMP_ANSIBLE: /root/.local/bin
  script:
    - python deploy/edit_ansible.py -tag=$CI_COMMIT_REF_NAME -dlu=$DOCKER_LOGIN_USER -dle=$DOCKER_LOGIN_EMAIL -dlp=$DOCKER_LOGIN_PASSWORD
    - cd deploy/ansible
    - ./deploy.sh --docker-build
  only:
    - master
    - schedules
    - web

staging-centos:
  stage: deploy
  image: alejandrozf/ubuntu-bionic
  environment: FTS-CENTOS7
  script:
    - export SSHPASS=$PASSWORD_CENTOS
    - ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
    - sshpass -e ssh-copy-id -o stricthostkeychecking=no -p 40409 -i /root/.ssh/id_rsa.pub -o ConnectTimeout=10 root@$STAGING_IP_PUBLIC_CENTOS
    - echo -e "    Hostname> $STAGING_HOST_CENTOS  , IP> $STAGING_IP_PUBLIC_CENTOS" >> /var/tmp/servers_installed
    - python deploy/edit_ansible.py --remote_host=$STAGING_HOST_CENTOS --remote_ip_public=$STAGING_IP_PUBLIC_CENTOS --remote_ip_internal=$STAGING_IP_INTERNAL_CENTOS --remote_port=40409
    - cd deploy/ansible
    - ./deploy.sh -i
  only:
    - /^pre-release-.*$/
    - schedules
    - web

staging-ubuntu:
  stage: deploy
  image: alejandrozf/ubuntu-bionic
  environment: FTS-UBUNTU_BIONIC
  script:
    - export SSHPASS=$PASSWORD_UBUNTU
    - ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
    - sshpass -e ssh-copy-id -o stricthostkeychecking=no -p 40411 -i /root/.ssh/id_rsa.pub -o ConnectTimeout=10 root@$STAGING_IP_PUBLIC_UBUNTU
    - echo -e "    Hostname> $STAGING_HOST_UBUNTU  , IP> $STAGING_IP_PUBLIC_UBUNTU" >> /var/tmp/servers_installed
    - python deploy/edit_ansible.py --remote_host=$STAGING_HOST_UBUNTU --remote_ip_public=$STAGING_IP_PUBLIC_UBUNTU --remote_ip_internal=$STAGING_IP_INTERNAL_UBUNTU --remote_port=40411
    - cd deploy/ansible
    - ./deploy.sh -i
  only:
    - /^pre-release-.*$/
    - schedules
    - web

staging-debian:
  stage: deploy
  image: alejandrozf/ubuntu-bionic
  environment: FTS-DEBIAN
  script:
    - export SSHPASS=$PASSWORD_DEBIAN
    - ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
    - sshpass -e ssh-copy-id -o stricthostkeychecking=no -p 40410 -i /root/.ssh/id_rsa.pub -o ConnectTimeout=10 root@$STAGING_IP_PUBLIC_DEBIAN
    - echo -e "    Hostname> $STAGING_HOST_DEBIAN  , IP> $STAGING_IP_PUBLIC_DEBIAN" >> /var/tmp/servers_installed
    - python deploy/edit_ansible.py --remote_host=$STAGING_HOST_DEBIAN --remote_ip_public=$STAGING_IP_PUBLIC_DEBIAN --remote_ip_internal=$STAGING_IP_INTERNAL_DEBIAN --remote_port=40410
    - cd deploy/ansible
    - ./deploy.sh -i
  only:
    - /^pre-release-.*$/
    - schedules
    - web
